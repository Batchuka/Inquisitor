

# @task # deprecated
# def old_new(c, name="", output_path='.'):
#     project_name = name if name else input(
#         "Please enter the new PyTRobot project name: ")
#     version = input(
#         "Please enter the new project version (default is 0.1.0): ") or "0.1.0"

#     # Converte o caminho relativo em absoluto se necessário
#     if output_path == '.':
#         output_path = os.getcwd()
#     else:
#         output_path = os.path.abspath(output_path)

#     # Supondo que a criação do projeto ocorra aqui com cookiecutter
#     try:
#         cookiecutter(
#             template=SCAFFOLD_PATH,
#             extra_context={'project_name': project_name, 'version': version},
#             no_input=True,
#             output_dir=output_path
#         )

#         # Chamada para criar o arquivo YAML após a criação do projeto
#         create_project_yaml(output_path, project_name, version)
#         print(
#             f"Project '{project_name}' created successfully in '{output_path}'.")
#     except Exception as e:
#         print(f"An error occurred while creating the project: {e}")



# # deprecated
# def create_project_yaml(output_dir, PROJECT_NAME, PROJECT_VERSION):

#     print(f"{BLUE}========== Creating 'project.yaml' =========={RESET}")
    
#     # Construindo os caminhos dinamicamente com base no projeto recém-criado
#     project_dir = os.path.join(output_dir, f"{PROJECT_NAME}")
#     yaml_content = {
#         'project_name': PROJECT_NAME,
#         'version': PROJECT_VERSION,
#         'project_path': project_dir,
#         'package_path': os.path.join(project_dir, PROJECT_NAME),
#         'build_path': os.path.join(project_dir, "dist"),
#         'aws':{
#             'default_region':'replace >> your_default_region',
#             'account_id':'replace >> your_account_id',
#             'codeartifact_domain':'replace >> your_codeartifact_domain',
#             'codeartifact_repository':'replace >> your_codeartifact_repository'
#         }
#     }


#     # Escrevendo o conteúdo no arquivo YAML
#     yaml_file_path = os.path.join(project_dir, "project.yaml")
#     with open(yaml_file_path, 'w') as yaml_file:
#         yaml.dump(yaml_content, yaml_file, default_flow_style=False)

#     print(f"YAML configuration file created at: {yaml_file_path}")

# # deprecated
# def create_main_py(output_dir):

#     print(f"{BLUE}========== Creating package '__main__.py' =========={RESET}")

#     main_content = """
#     import os
#     import sys

#     def main():

#         from pytrobot.core.__main__ import entrypoint

#         # Defines the current directory as an argument for the entrypoint
#         sys.argv = [os.path.abspath(os.path.dirname(__file__))]

#         # Invoke probot entrypoint
#         entrypoint()

#     if __name__ == '__main__':
#         main()

#     """

#     # Caminho completo onde o arquivo __main__.py será criado
#     main_py_path = os.path.join(output_dir, '__main__.py')

#     # Escreve o conteúdo no arquivo __main__.py
#     with open(main_py_path, 'w') as main_file:
#         main_file.write(main_content)

#     print(f"__main__.py file created at: {main_py_path}")

#     pass

# # deprecated
# def create_setup_py(output_dir, PROJECT_NAME, PROJECT_VERSION):

#     print(f"{BLUE}========== Creating package 'setup.py' =========={RESET}")

#     # Cria um arquivo setup.py do projeto com a configuração do pacote
#     setup_path = os.path.join(output_dir, "setup.py")
#     requirements_path = os.path.join(output_dir, "requirements.txt")
#     with open(setup_path, 'w') as setup_file:
#         setup_file.write(
#             f"""
#     from setuptools import setup, find_packages

#     setup(
#         name='{PROJECT_NAME}',
#         version='{PROJECT_VERSION}',
#         packages=find_packages(),
#         include_package_data=True,
#         install_requires={open(requirements_path).readlines()},
#         entry_points={{
#             'console_scripts': [
#                 '{PROJECT_NAME}-run={PROJECT_NAME}.__main__:main'
#             ]
#         }},
#     )
#             """
#         )
#     print(f"setup.py file created in: {setup_path}")


